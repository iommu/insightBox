import React from "react";
import "../styles/App.css";
import {K768_Encrypt} from 'crystals-kyber';

// import graphql and create client
import { createClient } from "urql";

const publicKey = [124, 184, 35, 240, 86, 110, 4, 162, 39, 109, 130, 12, 171, 32, 106, 243, 104, 113, 42, 70, 1, 184, 140, 175, 255, 7, 24, 19, 72, 205, 74, 39, 167, 202, 
    208, 102, 93, 251, 77, 79, 115, 177, 73, 74, 191, 194, 232, 61, 54, 55, 155, 130, 96, 40, 78, 114, 26, 75, 178, 13, 35, 245, 80, 24, 28, 108, 71, 49, 167, 92, 
    214, 38, 54, 156, 33, 45, 178, 193, 27, 145, 62, 161, 28, 18, 20, 150, 28, 68, 41, 6, 231, 11, 167, 200, 215, 193, 218, 152, 196, 22, 37, 51, 132, 25, 3, 144, 
    118, 55, 138, 186, 207, 19, 75, 124, 74, 244, 111, 30, 235, 69, 61, 218, 44, 51, 87, 135, 14, 17, 80, 217, 1, 114, 208, 6, 131, 72, 209, 129, 244, 154, 77, 134, 
    92, 98, 179, 11, 13, 1, 123, 127, 247, 58, 165, 123, 167, 117, 205, 105, 157, 150, 243, 57, 252, 55, 74, 163, 54, 47, 80, 162, 102, 225, 220, 26, 244, 3, 119, 
    98, 240, 127, 186, 92, 196, 212, 96, 10, 56, 108, 200, 209, 117, 29, 17, 76, 196, 200, 231, 178, 168, 64, 14, 111, 203, 43, 97, 242, 111, 33, 188, 44, 106, 71, 
    166, 130, 34, 59, 5, 6, 89, 93, 98, 121, 226, 64, 74, 179, 42, 25, 90, 230, 186, 242, 251, 195, 115, 81, 5, 39, 186, 43, 221, 90, 82, 11, 247, 83, 86, 26, 92, 
    234, 19, 153, 127, 193, 34, 110, 149, 45, 243, 137, 204, 227, 240, 6, 64, 231, 8, 136, 118, 24, 242, 6, 37, 87, 202, 147, 57, 160, 169, 135, 135, 108, 250, 
    131, 166, 46, 75, 58, 109, 44, 206, 29, 137, 28, 40, 104, 97, 252, 220, 23, 203, 25, 15, 86, 130, 85, 161, 98, 47, 189, 10, 126, 166, 231, 69, 188, 80, 178, 
    139, 147, 110, 93, 135, 85, 121, 136, 180, 68, 40, 205, 25, 96, 153, 245, 170, 18, 124, 134, 43, 125, 34, 2, 207, 7, 169, 15, 151, 34, 204, 219, 155, 85, 152, 
    21, 181, 226, 99, 160, 128, 94, 68, 156, 72, 44, 1, 183, 185, 166, 170, 67, 88, 174, 153, 38, 27, 214, 105, 68, 218, 89, 183, 76, 213, 162, 118, 98, 175, 39, 
    185, 27, 66, 81, 193, 82, 211, 58, 233, 18, 13, 39, 83, 108, 237, 130, 115, 87, 181, 55, 200, 232, 191, 209, 133, 152, 196, 135, 18, 155, 152, 13, 169, 219, 
    161, 182, 133, 194, 7, 180, 57, 215, 3, 84, 18, 183, 205, 88, 172, 202, 233, 64, 118, 108, 120, 149, 208, 146, 181, 6, 23, 14, 141, 136, 52, 165, 34, 140, 
    157, 160, 45, 1, 135, 20, 175, 185, 199, 12, 105, 35, 62, 118, 41, 201, 132, 141, 13, 37, 15, 178, 90, 205, 1, 150, 142, 247, 192, 131, 36, 226, 52, 74, 
    200, 64, 113, 86, 140, 78, 183, 144, 126, 27, 196, 197, 164, 13, 84, 75, 78, 34, 178, 3, 158, 147, 174, 1, 72, 168, 92, 160, 136, 53, 213, 43, 194, 120, 
    184, 46, 197, 54, 48, 100, 94, 23, 50, 195, 31, 43, 12, 83, 108, 52, 89, 163, 8, 56, 244, 159, 246, 170, 53, 7, 225, 25, 88, 113, 86, 220, 230, 11, 199, 
    35, 73, 62, 162, 156, 174, 196, 129, 105, 196, 22, 189, 183, 122, 191, 197, 124, 117, 140, 5, 251, 160, 13, 38, 121, 157, 166, 208, 182, 203, 9, 26, 177, 
    217, 203, 168, 24, 22, 52, 96, 166, 246, 218, 32, 231, 128, 155, 246, 92, 207, 1, 245, 161, 241, 133, 190, 149, 86, 204, 121, 25, 161, 5, 60, 203, 106, 42, 
    36, 79, 101, 1, 182, 233, 59, 46, 113, 176, 137, 59, 139, 244, 5, 34, 216, 232, 122, 192, 82, 166, 247, 51, 158, 127, 193, 24, 167, 212, 192, 159, 38, 
    131, 69, 91, 47, 239, 198, 27, 201, 24, 13, 50, 251, 140, 17, 128, 168, 76, 91, 16, 213, 42, 205, 77, 204, 107, 125, 52, 130, 207, 208, 150, 145, 247, 43,
    89, 208, 30, 56, 90, 185, 6, 235, 40, 23, 225, 11, 106, 36, 68, 218, 153, 82, 99, 118, 184, 236, 229, 1, 57, 0, 201, 198, 167, 52, 122, 48, 132, 48, 116,
    142, 124, 16, 46, 84, 11, 104, 42, 182, 12, 140, 16, 138, 245, 140, 47, 13, 67, 71, 142, 245, 156, 87, 17, 85, 192, 105, 147, 219, 83, 154, 82, 204, 159,
    174, 226, 144, 96, 82, 148, 139, 148, 128, 3, 55, 111, 179, 234, 25, 29, 18, 78, 98, 135, 24, 205, 70, 96, 216, 166, 180, 4, 7, 122, 118, 193, 199, 92,
    4, 124, 40, 145, 55, 247, 150, 106, 144, 51, 153, 71, 80, 118, 193, 150, 158, 166, 97, 121, 243, 115, 87, 166, 120, 43, 239, 80, 1, 106, 201, 67, 15, 
    144, 88, 135, 250, 71, 81, 240, 168, 127, 20, 162, 208, 37, 183, 5, 188, 21, 16, 212, 23, 249, 193, 38, 32, 154, 99, 71, 2, 38, 99, 100, 20, 165, 20, 
    154, 160, 231, 105, 215, 217, 86, 252, 151, 177, 47, 236, 130, 1, 106, 128, 93, 166, 95, 130, 70, 6, 135, 155, 203, 110, 69, 42, 63, 34, 108, 93, 92,
    133, 104, 228, 156, 220, 26, 74, 84, 243, 66, 172, 219, 83, 129, 7, 133, 51, 178, 72, 205, 132, 158, 160, 169, 140, 238, 64, 72, 22, 188, 184, 190, 
    245, 64, 185, 43, 70, 205, 48, 79, 76, 177, 143, 43, 251, 197, 15, 251, 136, 166, 107, 19, 160, 176, 70, 10, 22, 153, 203, 112, 201, 56, 225, 181, 
    76, 211, 64, 19, 103, 47, 234, 150, 207, 177, 113, 16, 48, 192, 84, 107, 67, 184, 20, 116, 149, 40, 214, 110, 236, 35, 10, 236, 214, 98, 39, 150, 
    90, 164, 68, 182, 108, 241, 109, 2, 219, 142, 34, 105, 200, 160, 230, 193, 230, 131, 31, 37, 97, 25, 177, 252, 102, 37, 18, 128, 62, 112, 3, 60, 
    218, 118, 215, 64, 100, 13, 8, 170, 157, 120, 158, 108, 192, 181, 216, 55, 6, 205, 212, 35, 25, 73, 84, 113, 65, 2, 136, 28, 141, 139, 242, 58, 
    147, 80, 89, 14, 52, 70, 241, 149, 64, 146, 120, 90, 27, 104, 202, 199, 195, 64, 255, 91, 137, 2, 97, 65, 127, 146, 68, 209, 156, 11, 225, 199, 
    3, 190, 252, 103, 156, 85, 156, 26, 184, 170, 31, 21, 80, 48, 27, 38, 230, 12, 11, 1, 105, 114, 49, 117, 148, 59, 247, 19, 112, 236, 149, 101, 
    73, 154, 178, 89, 57, 234, 234, 197, 211, 244, 148, 253, 152, 168, 245, 26, 163, 121, 145, 121, 156, 103, 83, 211, 54, 165, 134, 146, 64, 153, 
    245, 42, 129, 14, 185, 137, 163, 87, 27, 99, 11, 75, 135, 123, 216, 10, 141, 4, 45, 110, 4, 119, 110, 228, 113, 119, 254, 122, 149, 238, 122, 
    133, 112, 58];



// create custom client for this page where no token should exist
const client = createClient({
    url: "https://insightbox.xyz/api",
});

class SignIn extends React.Component {
    constructor(props) {
        super(props);
        // check if we have a auth code in URL
        const url = new URLSearchParams(window.location.search);
        const code = url.get("code");

        // do a check for the code and check we didn't accidentally come back to this page with same code
        if (code != null && code !== localStorage.getItem("old_code")) {
            localStorage.setItem("old_code", code);
            client
                .mutation(
                    `
      mutation{
        signIn(authCode: "${code}")
      }`
                )
                .toPromise()
                .then((result) => {
                    if (result.data) {
                        if (result.data.signIn) {
                            localStorage.setItem("token", result.data.signIn);
                            console.log("token saved");
                        } else {
                            console.log("returned token blank (auth error)");
                        }
                    } else {
                        console.log("server aint up now is it");
                    }

                    // generate (c, ss) pair
                    var output = K768_Encrypt(publicKey);

                    // store in local storage
                    localStorage.c = output[0];
                    localStorage.ss_tmp = output[1];

                    // convert c to hex string
                    var hexStr = bytesToHexStr(output[0]);
                    console.log(hexStr);
                    console.log(hexStr.length);

                    // send c to server

                    window.close();
                });
        }
    }

    render() {
        return (
            <div>
                <div class="homepage-content">
                    <br />
                    <br />
                    <br />
                    <br />
                    <div class="loader1"></div>
                </div>
            </div>
        );
    }
}

export default SignIn;

function bytesToHexStr(c) {
    return c.reduce(
        (output, elem) => output + ("0" + elem.toString(16)).slice(-2),
        ""
    );
}
