type Token {
  id: ID! #same as user token
  access_token: String!
  token_type: String!
  refresh_token: String!
  expiry: Time!
}

type User {
  id: ID! #is their email
  given_name: String!
  family_name: String!
  picture: String!
  locale: String! 
  colorSchemeID: Int!
}

type Day {
  # vvv DO NOT CHANGE
  id: ID!
  date: Time!
  # ^^^ DO NOT CHANGE
  sent: Int!
  received: Int!
  words: [Word!]!
}

type Word {
  id: ID!
  date: Time!
  text: String!
  value: Int!
}

type Email {
  id: ID!
  date: Time!
  poi_email: String!
  poi_name: String!
  sent: Int!
  received: Int!
}

type Mutation {
  signIn(authCode: String!): String! #takes in oauth key, returns JWT string
  deleteAccount(email: String!): Int! #takes email address as 100% sure you want to delete check, returns 0 if worked
}

type Query {
  user: User # can only query for current user info
  data(start: Time!, end: Time!): [Day!]!
}

scalar Time

# make generate