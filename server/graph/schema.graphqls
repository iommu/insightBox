type User {
  id: ID!
  name: String!
  token: String!
  colorSchemeID: Int!
}

type Day {
  id: ID!
  user: ID!
  date: Time!
  emails: Int!
}

type Mutation {
  signIn(input: String!): String! #takes in oauth key, returns JWT string
}

type Query {
  user: User # can only query for current user info
  data(start: Time!, end: Time!): [Day]
}

scalar Time

# go run github.com/99designs/gqlgen generate