type Token {
  id: ID! #same as user token
  access_token: String!
  token_type: String!
  refresh_token: String!
  expiry: Time!
}

type User {
  id: ID! #is their email
  name: String!
  colorSchemeID: Int!
}

type Day {
  id: ID!
  user: ID!
  date: Time!
  emails: Int!
}

type Mutation {
  signIn(authCode: String!): String! #takes in oauth key, returns JWT string
}

type Query {
  user: User # can only query for current user info
  data(start: Time!, end: Time!): [Day!]!
}

scalar Time

# go run github.com/99designs/gqlgen generate